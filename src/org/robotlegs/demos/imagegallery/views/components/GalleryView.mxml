<?xml version="1.0" encoding="utf-8"?>
<!--
	Inversion of Control/Dependency Injection Using Robotlegs
	Image Gallery
	
	Any portion of this demonstration may be reused for any purpose where not 
	licensed by another party restricting such use. Please leave the credits intact.
	
	Joel Hooks
	http://joelhooks.com
	joelhooks@gmail.com 
-->
<s:Group 
	xmlns:fx="http://ns.adobe.com/mxml/2009" 
	xmlns:s="library://ns.adobe.com/flex/spark" 
	xmlns:mx="library://ns.adobe.com/flex/mx" 
	width="800" height="800" 
	creationComplete="creationCompleteHandler(event)" 
	xmlns:components="org.robotlegs.demos.imagegallery.views.components.*" 
	xmlns:layouts="org.robotlegs.demos.imagegallery.views.components.layouts.*">
	
	<s:layout>
		<s:BasicLayout/>
	</s:layout>
		
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.core.FlexGlobals;
			import mx.events.FlexEvent;
			
			import org.robotlegs.demos.imagegallery.events.GalleryImageEvent;
			import org.robotlegs.demos.imagegallery.models.vo.GalleryImage;
			import org.robotlegs.demos.imagegallery.views.components.renderers.GalleryImageThumbnailItemRenderer;
			
			import spark.effects.Rotate3D;
			
			private var _dataProvider:ArrayCollection;
			private var _imageSource:String;
			private var _rotateFilter:Rotate3D;
			
			public function get imageSource():String
			{
				return _imageSource;
			}

			[Bindable] 
			public function set imageSource(v:String):void
			{
				_imageSource = v;
			}


			public function get dataProvider():ArrayCollection
			{
				return _dataProvider;
			}
			
			[Bindable]
			public function set dataProvider(v:ArrayCollection):void
			{
				_dataProvider = v;
			}
			
			public function setThumbScrollPosition(position:int):void
			{
				this.dgThumbnails.horizontalScrollPosition = position;
			}

			public function get rotateFilter():Rotate3D
			{
				return _rotateFilter;
			}
			
			public function set rotateFilter(value:Rotate3D):void
			{
				_rotateFilter = value;
			} 
		
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				dgThumbnails.addEventListener( GalleryImageEvent.SELECT_GALLERY_IMAGE, handleSelectImage);
			}
			
			protected function handleSelectImage(event:GalleryImageEvent):void
			{
				//dispatchEvent(event);
			}

		]]>
	</fx:Script>
	
	<s:Group width="100%" height="100%">
		<s:Rect width="100%" height="100%">
			<s:fill>
				<mx:LinearGradient rotation="90">
					<mx:entries>
						<mx:GradientEntry color="#333333"/>
						<mx:GradientEntry color="#111111"/>
					</mx:entries>
				</mx:LinearGradient>
			</s:fill>
		</s:Rect>
	</s:Group>

	<s:Group id="test">
		<s:layout>
			<s:VerticalLayout />
		</s:layout>
	</s:Group>
	
	<s:Group
		id="dgContainer"
		transformX="{dgContainer.width/2}"
		transformY="{dgContainer.height/2}"
		verticalCenter="0"
		horizontalCenter="0"
		z="80">
		
		<s:Rect width="100%" height="100%">
			<s:fill>
				<s:SolidColor color="#FFFFFF" alpha="0"/>
			</s:fill>
		</s:Rect>
		
		<s:DataGroup 
			id="dgThumbnails"
			dataProvider="{this.dataProvider}"
			itemRenderer="org.robotlegs.demos.imagegallery.views.components.renderers.GalleryImageThumbnailItemRenderer">
			<s:layout>
				<layouts:GalleryTileLayout
					id="animatedLayout"
					verticalGap="5" horizontalGap="5" requestedColumnCount="20" requestedRowCount="10" />
			</s:layout>
		</s:DataGroup>	
		
	</s:Group>

	
	<components:GalleryLabel id="galleryLabel" color="#FFFFFF" top="5" right="5" visible="false" includeInLayout="false" />
	<s:Label fontSize="9" text="all images Â© their owner" width="100%" textAlign="right" bottom="100" color="#FFFFFF" paddingRight="5"/>
	
</s:Group>
